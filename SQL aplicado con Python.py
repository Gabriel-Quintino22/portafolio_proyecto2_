# -*- coding: utf-8 -*-
"""Copia de SQL en Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mwi1n5Hks6ShZ_J2TLvNKsuyaC5W4w4k

# Contenidos de esta clase

* Aprenderemos a montar una base de datos SQL liviana utilizando SQLite.
* Veremos cómo consultar la base de datos SQL desde Python.
* Comprenderemos, de manera aplicada, cómo se integra SQL con Python.

## SQL en Python

* Viene con SQLite para Python instalado (sqlite3), por lo que solo debemos importar.
"""

# Importar librerías necesarias
import sqlite3            # Para manejar la base de datos SQLite
import pandas as pd       # Para manipulación de datos en formato tabular   #Llegue al minuto : -18:00

# Crear una base de datos en memoria (temporal, se elimina al cerrar la sesión)
conn = sqlite3.connect(":memory:")  #memory es por que por el momento va ser esporadico

# Crear un cursor para ejecutar comandos SQL
cursor = conn.cursor()  #El cursor es para simulamos que estamos trabajando en la abse de datos o estamos trabajando dentro de la base de datos

# Crear una tabla llamada "empleados" con columnas: id, nombre, edad, salario
cursor.execute(
    '''CREATE TABLE empleados (
    id INTEGER PRIMARY KEY,
    nombre TEXT,
    edad INTEGER,
    salario REAL)'''
    )
#Va a crear una tabla para empleados que va a tener una columna que se llamara id que va a ser un numero entero "integer" identificador unico id
#de ahi otra columna que se va a llamar nombre y va a ser de text "gabriel" de ahi otra columna edad, por ultimo la ultima columna que se llamara salario
# es decir crear una tabla que se llame empleados y que contenga esas variables (columnas)



# Crear una lista con los datos de empleados (id, nombre, edad, salario)
empleados = [
    (1, 'Ana', 28, 45000),
    (2, 'Luis', 35, 52000),
    (3, 'Sofía', 40, 60000)
]
#ahora estamos creando los datos para insertarlos en la base de datos de antes

empleados

#Insertar los datos en la tabla usando una consulta parametrizada
cursor.executemany("INSERT INTO empleados VALUES (?, ?, ?, ?)", empleados)

#Cada uno de los signos de interrogacion va a ir por columna que designamos en la lista del codigo anterior y se repite

#Guarda los cambios realizados en la base de datos
conn.commit()

# Consultar todos los empleados con salario mayor a 50000 usando SQL
consulta = pd.read_sql_query("SELECT * FROM empleados WHERE salario > 50000", conn)

# Mostrar el resultado como un DataFrame
print(consulta)

"""# Conclusiones

* Python tiene todo resuelto para trabajar con bases de datos SQL.
* Es importante saber SQL para trabajar directamente con bases de datos.
* Este ejemplo es muy cercano a la realidad, solo que comúnmente se deben indicar credenciales de acceso SQL.
"""